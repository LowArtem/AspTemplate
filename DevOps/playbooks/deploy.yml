---
- name: 'Playbook: [Обновление и развертывание приложения]'
  hosts: all
  become: yes

  vars:
    GITUSER: # - Username для клонирования приватного репозитория
    GITPASS: # - Пароль для клонирования приватного репозитория
    REPO: # - Ссылка на репозиторий
    BRANCH: master # - Ветка для клонирования
    DEV_OPS_DIR: '/DevOps' # - Путь до папки с DevOps

  pre_tasks:
    - name: Проверка обязательных переменных
      fail:
        msg: "Переменные GITUSER, GITPASS и REPO должны быть заданы"
      when: GITUSER is not defined or GITPASS is not defined or REPO is not defined

  tasks:
    - name: 'Создание временной папки'
      tempfile:
        state: directory
        suffix: _git_clone
      register: directory

    - set_fact: directory="{{ directory.path }}"

    - debug:
        msg: 'Проект будет склонирован в директорию: {{ directory }}'

    - name: 'Клонирование репозитория'
      git:
        repo: "https://{{ GITUSER | urlencode }}:{{ GITPASS | urlencode }}@{{ REPO }}"
        dest: '{{ directory }}/'
        version: '{{ BRANCH }}'

    - block:
        - name: Сборка основного приложения
          community.docker.docker_compose_v2:
            project_src: "{{ directory }}{{ DEV_OPS_DIR | default('', true) }}"
            files: [docker-compose.yml]
            state: present
          register: result_build_main

        - name: Удаление старых docker контейнеров
          command: sudo docker compose -f docker-compose.yml rm -f
          args:
            chdir: "{{ directory }}{{ DEV_OPS_DIR | default('', true) }}"
          ignore_errors: True
          when: ENV_FILE is not defined or ENV_FILE == ""

        - name: Запуск основного приложения
          community.docker.docker_compose_v2:
            project_src: "{{ directory }}{{ DEV_OPS_DIR | default('', true) }}"
            files: [docker-compose.yml]
            state: present
          register: result_up_main
          when: result_build_main.rc == 0

      rescue:
        - name: Логирование ошибки
          debug:
            msg: "Ошибка на этапе развертывания. Результаты: \
                  Сборка - {{ result_build_main.rc }}, \
                  Запуск - {{ result_up_main.rc }}"

    - name: Удаление временной директории
      file:
        path: '{{ directory }}'
        state: absent
      when: result_build_main.rc == 0 and result_up_main.rc == 0

    - name: Проверка на успешность развертывания
      debug:
        msg: 'Проект успешно развернут'
      failed_when: result_up_main.rc != 0
